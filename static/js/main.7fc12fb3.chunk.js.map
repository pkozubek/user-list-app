{"version":3,"sources":["components/Input/Input.module.css","components/SingleUser/SingleUser.module.css","components/Modal/Modal.module.css","components/Shadow/Shadow.module.css","components/Confirmation/Confirmation.module.css","components/Button/Button.module.css","components/Button/Button.js","components/SingleUser/SingleUser.js","components/Shadow/Shadow.js","components/Modal/Modal.js","components/Confirmation/Confirmation.js","components/Input/Input.js","containers/AddUserForm/AddUserForm.js","containers/UserList/UserList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Invalid","User","Modal","Invisible","Backdrop","Confirmation","Button","button","props","react_default","a","createElement","disabled","onClick","click","children","singleUser","key","id","className","Styles","user","nickname","email","ipAdress","delete","shadow","show","styles","nextProps","nextState","this","Fragment","Shadow","style","transform","opacity","display","React","Component","confirmation","info","onYesClick","onNoClick","input","currentStyle","Input","isValid","push","join","value","onChange","change","placeholder","AddUserForm","state","inputs","definition","placeHolder","name","validation","needed","isChanged","checkMonkey","checkIp","isFormValid","isConfirmationVisible","inputValidation","currentVal","validationRules","trim","includes","splitedEmailValues","split","octet","RegExp","concat","test","inputHandle","event","inputId","newInputs","Object","objectSpread","_this","updatedInputElement","target","moded","updatedFormIsValid","elementId","setState","formHandler","preventDefault","userToAdd","keys","forEach","_this2","arrayOfInputs","inputName","config","onSubmit","map","inputElement","UserList","users","valueToAdd","isFormVisible","showError","userToDelete","containsUser","i","length","removeUserFromList","row","confirmRemoving","newUsersList","splice","itemToDelete","addElementToList","userObject","setTimeout","handleFormShow","handleConfirmationCancel","confirmAddingElementToList","currentUsersArray","userList","index","SingleUser","error","components_Modal_Modal","containers_AddUserForm_AddUserForm","App","containers_UserList_UserList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fc12fb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Invalid\":\"Input_Invalid__1NrbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"SingleUser_User__3JfHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2WBTT\",\"Invisible\":\"Modal_Invisible__1eIQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Shadow_Backdrop__m7uPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Confirmation\":\"Confirmation_Confirmation__f1Jul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","import React from 'react';\nimport styles from './Button.module.css'\n\nconst button = (props) => {\n    return <button\n        disabled = {props.disabled}\n        //className = {[styles.Button, styles[props.buttonType]].join(' ')}\n        onClick = {props.click}>\n        {props.children}\n    </button>\n}\n\nexport default button;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport Styles from './SingleUser.module.css';\r\n\r\nconst singleUser = (props)=>{\r\n    return (<div key = {props.id} className = {Styles.User}>\r\n        <h2>{props.user.nickname}</h2>\r\n        <p>{props.user.email}</p>\r\n        <p>{props.user.ipAdress}</p>\r\n        <Button click = {props.delete}>Remove</Button>\r\n    </div>)\r\n}\r\n\r\nexport default singleUser;","import React from 'react';\nimport styles from './Shadow.module.css';\n\nconst shadow = (props)=>{\n    return props.show ? <div onClick = {props.click} className = {styles.Backdrop}></div> : null;\n}\n\nexport default shadow;","import React from 'react';\nimport Styles from './Modal.module.css';\nimport Shadow from '../Shadow/Shadow';\n\nclass Modal extends React.Component {\n\n    shouldComponentUpdate(nextProps,nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return ( \n            <React.Fragment >\n            <Shadow\n            show = {this.props.show}\n            click = {\n                this.props.click\n            }\n            /> \n            <div className = {Styles.Modal}\n            style = {{transform: this.props.show ? 'translateY(0)' : 'translateY(-100)',\n                    opacity: this.props.show ? '1' : '0', \n                    display: this.props.show ? 'block' : 'none'}} >\n                {this.props.children} \n            </div> \n            </React.Fragment>\n        );\n    }\n};\n\nexport default Modal;","import Modal from '../Modal/Modal';\r\nimport React from 'react';\r\nimport Button from '../Button/Button';\r\nimport Styles from './Confirmation.module.css';\r\n\r\nconst confirmation = (props)=>{\r\n\r\n\r\n    return (\r\n            <div className = {Styles.Confirmation}>\r\n                <h2>{props.info}</h2>\r\n                <Button click = {props.onYesClick}>Yes</Button>\r\n                <Button click = {props.onNoClick}>No</Button>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default confirmation;","import React from 'react';\r\nimport Styles from './Input.module.css';\r\n\r\nconst input = (props)=>{\r\n\r\n    let currentStyle = [Styles.Input]\r\n\r\n    if(!props.isValid){\r\n        currentStyle.push([Styles.Invalid])\r\n    }\r\n\r\n    return <input\r\n    className = {currentStyle.join(' ')}\r\n    value = {props.value}\r\n    onChange = {props.change}\r\n    placeholder = {props.placeholder}\r\n    />\r\n}\r\n\r\nexport default input;","import React,{Component} from 'react';\r\nimport Input from '../../components/Input/Input';\r\nimport Button from '../../components/Button/Button';\r\nimport input from '../../components/Input/Input';\r\n\r\nclass AddUserForm extends Component{\r\n    state = {\r\n        inputs:{\r\n            nickname:{\r\n                definition:{\r\n                    placeHolder: 'Write your nickname',\r\n                    name: 'nickname'\r\n                },\r\n                validation:{\r\n                needed: true\r\n                },\r\n                value: '',\r\n                isChanged: false,\r\n                isValid: false\r\n            },\r\n            email:{\r\n                definition:{\r\n                placeHolder: 'Write your email',\r\n                name: 'email'\r\n                },\r\n                validation:{\r\n                needed: true,\r\n                checkMonkey: true\r\n                },\r\n                value: '',\r\n                isChanged: false,\r\n                isValid: false\r\n            },\r\n            ipAdress:{\r\n                definition:{\r\n                placeHolder: 'Write your ipAdress',\r\n                name: 'ipAdress'\r\n                },\r\n                validation:{\r\n                needed: true,\r\n                checkIp: true\r\n                },\r\n                value: '',\r\n                isChanged: false,\r\n                isValid: false\r\n            }\r\n        },\r\n        isFormValid: false,\r\n        isConfirmationVisible: false\r\n    }\r\n\r\n    inputValidation = (currentVal, validationRules)=>{\r\n        let isValid = true;\r\n\r\n        if(validationRules.needed){\r\n            isValid = currentVal.trim() !== '' && isValid;\r\n\r\n            if(validationRules.checkMonkey){\r\n                if(currentVal.includes('@')){\r\n                    let splitedEmailValues = currentVal.split('@');\r\n                    isValid = splitedEmailValues[0].trim() !== '' &&  splitedEmailValues[1].trim() !== '' && isValid;\r\n                }\r\n                else\r\n                    isValid  = false;\r\n            }\r\n            if(validationRules.checkIp){\r\n                //https://stackoverflow.com/questions/4460586/javascript-regular-expression-to-check-for-ip-addresses\r\n                const octet = '(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)';\r\n                const regex = new RegExp(`^${octet}\\\\.${octet}\\\\.${octet}\\\\.${octet}$`);\r\n                isValid = regex.test(currentVal) && isValid; \r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputHandle = (event, inputId)=>{\r\n        \r\n        const newInputs = {\r\n            ...this.state.inputs\r\n        }\r\n\r\n        const updatedInputElement = {\r\n            ...this.state.inputs[inputId]\r\n        }\r\n\r\n        updatedInputElement.value = event.target.value;\r\n        updatedInputElement.isValid = \r\n        this.inputValidation(updatedInputElement.value,updatedInputElement.validation);\r\n        updatedInputElement.moded = true;\r\n        newInputs[inputId] = updatedInputElement;\r\n\r\n        let updatedFormIsValid =  true;\r\n        for(let elementId in newInputs){\r\n            updatedFormIsValid = newInputs[elementId].isValid && updatedFormIsValid;\r\n        }\r\n\r\n        this.setState({inputs: newInputs, isFormValid: updatedFormIsValid});\r\n    }\r\n\r\n    formHandler = (event)=>{\r\n        event.preventDefault();\r\n\r\n        let userToAdd = {\r\n            nickname: this.state.inputs.nickname.value,\r\n            email: this.state.inputs.email.value,\r\n            ipAdress: this.state.inputs.ipAdress.value\r\n        }\r\n\r\n        this.props.formHandler(userToAdd);\r\n\r\n        let newInputs = this.state.inputs;\r\n        Object.keys(newInputs).forEach((key)=>{newInputs[key].value = ''});\r\n\r\n        this.setState({\r\n            inputs: newInputs\r\n        })\r\n    }\r\n    \r\n    render(){\r\n\r\n        let arrayOfInputs = [];\r\n\r\n        for (let inputName in this.state.inputs){\r\n            arrayOfInputs.push(\r\n                {\r\n                    id: inputName,\r\n                    config: this.state.inputs[inputName]\r\n                }\r\n            ) \r\n        }\r\n\r\n        return (\r\n            <div>\r\n            <form onSubmit ={this.formHandler}>\r\n                <h1>Add user:</h1>\r\n                {arrayOfInputs.map((inputElement)=>{\r\n                    return (<Input\r\n                        key = {inputElement.id}\r\n                        isValid = {inputElement.config.isValid}\r\n                        value = {inputElement.config.value}\r\n                        placeholder = {inputElement.config.definition.placeHolder}\r\n                        change = {(event)=>this.inputHandle(event, inputElement.id)}\r\n                    />);\r\n                })\r\n                }\r\n                <Button\r\n                disabled = {!this.state.isFormValid}\r\n                >\r\n                Add User!\r\n                </Button>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserForm;","import React, {Component} from 'react';\r\n\r\nimport SingleUser from '../../components/SingleUser/SingleUser';\r\nimport Button from '../../components/Button/Button';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Confirmation from '../../components/Confirmation/Confirmation';\r\n\r\nimport UserForm from '../AddUserForm/AddUserForm';\r\n\r\nclass UserList extends Component{\r\n    \r\n    state = {\r\n            users:[],\r\n            valueToAdd: null,\r\n            isFormVisible: false,\r\n            isConfirmationVisible: false,\r\n            showError: false,\r\n            userToDelete: null\r\n    }\r\n\r\n    containsUser=(user)=>{\r\n        for (let i = 0; i < this.state.users.length; i++) {\r\n            if (this.state.users[i].nickname === user.nickname \r\n                || this.state.users[i].email === user.email) {\r\n                return true;\r\n            }\r\n        }\r\n    \r\n        return false;\r\n    }\r\n\r\n    removeUserFromList = (row)=>{\r\n        this.setState({\r\n            isConfirmationVisible: true,\r\n            userToDelete: row\r\n        })\r\n    }\r\n    \r\n    confirmRemoving = ()=>{\r\n        let newUsersList = [];\r\n\r\n        if(this.state.userToDelete !== 'All'){\r\n            newUsersList = this.state.users;\r\n            newUsersList.splice(this.state.userToDelete,1);\r\n        }        \r\n\r\n        this.setState({\r\n        users: newUsersList,\r\n        itemToDelete: null,\r\n        isConfirmationVisible: false\r\n        });\r\n    }\r\n    \r\n\r\n    addElementToList = (userObject)=>{\r\n        let isInArray = this.containsUser(userObject); \r\n        \r\n        if(isInArray){\r\n            this.setState({\r\n                valueToAdd: null,\r\n                isFormVisible: false,\r\n                isConfirmationVisible: false,\r\n                showError: true\r\n            })\r\n            setTimeout(()=>{this.setState({showError: false})},1000);\r\n        }\r\n        else{ \r\n            this.setState({\r\n                valueToAdd: userObject,\r\n                isFormVisible: false,\r\n                isConfirmationVisible: true,\r\n                showError: false\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFormShow = ()=>{\r\n        this.setState({\r\n            isFormVisible: !this.state.isFormVisible\r\n        });\r\n    }\r\n\r\n    handleConfirmationCancel = ()=>{\r\n        this.setState({isConfirmationVisible: false, valueToAdd: {}})\r\n    }\r\n\r\n    confirmAddingElementToList = ()=>{\r\n        let currentUsersArray = this.state.users;\r\n        currentUsersArray.push(this.state.valueToAdd);\r\n\r\n        this.setState({\r\n            users: currentUsersArray, \r\n            isConfirmationVisible: false,\r\n            valueToAdd: null\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let userList = <div>List is empty - add some users!</div>\r\n\r\n        if(this.state.users.length>0){\r\n            userList = this.state.users.map((user,index)=>{\r\n                return <SingleUser key = {user.nickname} user = {user} delete = {()=>this.removeUserFromList(index)}/>\r\n                })\r\n        }\r\n\r\n        let error = this.state.showError \r\n            ? <Modal show = {this.state.showError}><h2>Taki uztykownik juz istnieje</h2></Modal>\r\n            : null;\r\n        \r\n        let confirmation = null;\r\n        if(this.state.isConfirmationVisible){\r\n            confirmation = <Confirmation \r\n            show = {this.state.isConfirmationVisible}\r\n            info = {this.state.valueToAdd !== null\r\n                    ?'Do you want to add this user to List?'\r\n                    :'Do you want to remove user from List'}\r\n            onYesClick = {this.state.valueToAdd !== null\r\n                    ?this.confirmAddingElementToList\r\n                    :this.confirmRemoving}\r\n            onNoClick = {this.handleConfirmationCancel}\r\n            />\r\n        }\r\n\r\n        return(\r\n        <div>\r\n            <Modal \r\n            show = {this.state.isFormVisible} \r\n            click = {this.handleFormShow}>\r\n                <UserForm \r\n                formHandler = {this.addElementToList}/>\r\n            </Modal>\r\n            <Modal \r\n            show = {this.state.isConfirmationVisible}>            \r\n                {confirmation}\r\n            </Modal>\r\n            {error}\r\n            <Button \r\n            click = {this.handleFormShow}>Add user</Button>\r\n            {userList}\r\n            {this.state.users.length>0 ?\r\n                <Button click = {()=>this.removeUserFromList('All')}>Delete All Users</Button>\r\n                :null}\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default UserList;","import React from 'react';\nimport './App.css';\nimport UserList from './containers/UserList/UserList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}